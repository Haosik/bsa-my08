{"version":3,"sources":["file:///webpack/bootstrap 07ca05ec0a67f306877e","file:///D:\\BinaryAcademy\\Stage3\\08\\my08ts\\src\\fight\\fighter.ts","file:///D:\\BinaryAcademy\\Stage3\\08\\my08ts\\src\\fight\\index.ts","file:///D:\\BinaryAcademy\\Stage3\\08\\my08ts\\src\\fight\\improvedFighter.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 07ca05ec0a67f306877e","import {IImprovedFighter} from './improvedFighter';\n\nexport interface IFighter {\n\tname: string;\n\tpower: number;\n\thealth: number;\n\tsetDamage: (damage: number) => void;\n\thit: (enemy: IFighter | IImprovedFighter, point: number) => void;\n}\n\n// Создаём класс, которому передаём параметры:\n// string name, number power, number health\nexport default class Fighter implements IFighter {\n\tname: string;\n\tpower: number;\n\thealth: number;\n\t// power по умолчанию: рандом от 1 до 10\n\tconstructor(name: string = \"Fighter-XX\", power: number = Math.floor((Math.random() * 10) + 1), health: number = 1000) {\n\t\tthis.name = name,\n\t\t\tthis.power = power,\n\t\t\tthis.health = health\n\t}\n\t// Наносим урон этой сущности\n\tsetDamage(damage: number) {\n\t\tthis.health -= damage;\n\t\tconsole.log(`${this.name}'s health: ${this.health}`);\n\t}\n\t// Эта сущность наносит урон по enemy\n\thit(enemy: IFighter | IImprovedFighter, point: number = 5) {\n\t\tlet damage: number = (point * this.power)\n\t\t// Проверяем, не закончена ли игра, и тогда бьём по врагу\n\t\tif (enemy.health >= 0) {\n\t\t\tenemy.setDamage(damage)\n\t\t}\n\t\t// Сразу после удара проверяем жизни врага, и опционально выводим сообщение о победе\n\t\tif (enemy.health <= 0) {\n\t\t\tconsole.log(`%c ${this.name} won!`, 'color: #000; background-color: #fff; font-weight: bold')\n\t\t}\n\t}\n};\n\n\n// WEBPACK FOOTER //\n// ./fight/fighter.ts","import Fighter, {IFighter} from './fighter';\r\nimport ImprovedFighter, {IImprovedFighter} from './improvedFighter';\r\n\r\n//Type inference\r\nlet gameEnd = false;\r\n\r\nlet fight = (fighter: IFighter, improvedFighter: IImprovedFighter, ...point: number[]) => {\r\n\r\n\tgameEnd = false;\r\n\t// Начало матча\r\n\tconsole.log(`%c In the red corner:`, 'background: #bb0000;');\r\n\tconsole.table({ fighter });\r\n\tconsole.log(`%c In the blue corner:`, 'background: #0000bb;');\r\n\tconsole.table({ improvedFighter });\r\n\tconsole.log(`%c LET THE FIGHT BEGIN!!!`, 'color: #fb1;font-weight: bold');\r\n\r\n\t// Счётчик текущего раунда\r\n\tlet round: number = 1;\r\n\tlet hitsCount: number = point.length;\r\n\tlet dmg: number = 0;\r\n\tdo {\r\n\t\tconsole.log(`█ Round ${round} █`)\r\n\t\t// Выбираем рандомную цифру урона из переданных, при инициализации битвы\r\n\t\tdmg = point[Math.floor(Math.random() * (hitsCount))];\r\n\t\tfighter.hit(improvedFighter, dmg);\r\n\t\tif (improvedFighter.health <= 0) {\r\n\t\t\tgameEnd = true;\r\n\t\t}\r\n\t\t// Выбираем рандомную цифру урона из переданных, при инициализации битвы\r\n\t\tif (!gameEnd) {\r\n\t\t\tdmg = point[Math.floor(Math.random() * (hitsCount))];\r\n\t\t\timprovedFighter.hit(fighter, dmg);\r\n\t\t\tround++;\r\n\t\t}\r\n\t\tif (fighter.health <= 0) {\r\n\t\t\tgameEnd = true;\r\n\t\t}\r\n\t} while (!gameEnd);\r\n}\r\n\r\nlet startFight = () => {\r\n\tlet fighter1 = new Fighter(\"Killer3000\");\r\n\tlet fighter2 = new ImprovedFighter(\"Nagibator99\");\r\n\tfight(fighter1, fighter2, 35, 88, 100, 53);\r\n}\r\nstartFight();\r\n\r\n//Misc\r\nconst startBtn = document.getElementById('start-btn') as HTMLButtonElement;\r\nstartBtn.addEventListener('click', function (e) {\r\n\te.preventDefault();\r\n\tconsole.clear();\r\n\tstartFight();\r\n});\n\n\n// WEBPACK FOOTER //\n// ./fight/index.ts","import Fighter, { IFighter } from './fighter';\r\n\r\nexport interface IImprovedFighter extends IFighter {\r\n\tdoubleHit: (enemy: IFighter | IImprovedFighter, point: number) => void;\r\n}\r\n// Создаём класс, который наследует Fighter (health и power - по умолчанию)\r\nexport default class ImprovedFighter extends Fighter implements IImprovedFighter {\r\n\tdoubleHit(enemy: IFighter | IImprovedFighter, point = 5) {\r\n\t\tsuper.hit(enemy, point * 2)\r\n\t}\r\n}\n\n\n// WEBPACK FOOTER //\n// ./fight/improvedFighter.ts"],"sourceRoot":""}